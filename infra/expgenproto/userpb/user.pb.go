// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package userpb // import "github.com/yoheimuta/xo-pb-grpc-example-app/infra/expgenproto/userpb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// RegisterUserRequest represents a request for the RegisterUser method.
type RegisterUserRequest struct {
	// user_id represents a user's id. This is UUID v4. Required.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// email_address represents an email address. Required.
	EmailAddress string `protobuf:"bytes,2,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	// password represents a raw password. Required.
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserRequest) Reset()         { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()    {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95ea30eb0572f377, []int{0}
}
func (m *RegisterUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserRequest.Unmarshal(m, b)
}
func (m *RegisterUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserRequest.Merge(dst, src)
}
func (m *RegisterUserRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterUserRequest.Size(m)
}
func (m *RegisterUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserRequest proto.InternalMessageInfo

func (m *RegisterUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RegisterUserRequest) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// RegisterUserResponse represents a response for the RegisterUser method.
type RegisterUserResponse struct {
	// auth_token represents a authencation credential.
	AuthToken            string   `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterUserResponse) Reset()         { *m = RegisterUserResponse{} }
func (m *RegisterUserResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterUserResponse) ProtoMessage()    {}
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_95ea30eb0572f377, []int{1}
}
func (m *RegisterUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterUserResponse.Unmarshal(m, b)
}
func (m *RegisterUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterUserResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterUserResponse.Merge(dst, src)
}
func (m *RegisterUserResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterUserResponse.Size(m)
}
func (m *RegisterUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterUserResponse proto.InternalMessageInfo

func (m *RegisterUserResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterUserRequest)(nil), "userpb.RegisterUserRequest")
	proto.RegisterType((*RegisterUserResponse)(nil), "userpb.RegisterUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// RegisterUser registers an user.
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/userpb.UserService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// RegisterUser registers an user.
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userpb.UserService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userpb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _UserService_RegisterUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_95ea30eb0572f377) }

var fileDescriptor_user_95ea30eb0572f377 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x5d, 0x85, 0xd5, 0x1d, 0xd7, 0x4b, 0x14, 0x2c, 0xab, 0x82, 0xd4, 0x8b, 0x97, 0xb6,
	0xa0, 0xf8, 0x03, 0x14, 0x11, 0xc4, 0x5b, 0xd5, 0xcb, 0x5e, 0x4a, 0xda, 0x8e, 0x6d, 0x70, 0xdb,
	0x8c, 0x99, 0x44, 0xeb, 0xbf, 0x97, 0xa4, 0x22, 0x2e, 0xec, 0x2d, 0xf3, 0xbd, 0xc7, 0x7b, 0xbc,
	0x00, 0x38, 0x46, 0x93, 0x92, 0xd1, 0x56, 0x8b, 0xa9, 0x7f, 0x53, 0x19, 0x6b, 0x38, 0xcc, 0xb1,
	0x51, 0x6c, 0xd1, 0xbc, 0x32, 0x9a, 0x1c, 0x3f, 0x1c, 0xb2, 0x15, 0xc7, 0xb0, 0xeb, 0x0d, 0x85,
	0xaa, 0xa3, 0xc9, 0xf9, 0xe4, 0x72, 0x96, 0x07, 0xff, 0x63, 0x2d, 0x2e, 0xe0, 0x00, 0x3b, 0xa9,
	0x56, 0x85, 0xac, 0x6b, 0x83, 0xcc, 0xd1, 0x76, 0x90, 0xe7, 0x01, 0xde, 0x8e, 0x4c, 0x2c, 0x60,
	0x8f, 0x24, 0xf3, 0x97, 0x36, 0x75, 0xb4, 0x13, 0xf4, 0xbf, 0x3b, 0xbe, 0x81, 0xa3, 0xf5, 0x42,
	0x26, 0xdd, 0x33, 0x8a, 0x33, 0x00, 0xe9, 0x6c, 0x5b, 0x58, 0xfd, 0x8e, 0xfd, 0x6f, 0xe9, 0xcc,
	0x93, 0x17, 0x0f, 0xae, 0x96, 0xb0, 0xef, 0xed, 0xcf, 0x68, 0x3e, 0x55, 0x85, 0xe2, 0x09, 0xe6,
	0xff, 0x53, 0xc4, 0x49, 0x3a, 0xee, 0x49, 0x37, 0x8c, 0x59, 0x9c, 0x6e, 0x16, 0xc7, 0xe2, 0x78,
	0xeb, 0xee, 0x61, 0x79, 0xdf, 0x28, 0xdb, 0xba, 0x32, 0xad, 0x74, 0x97, 0x7d, 0xeb, 0x16, 0x55,
	0xe7, 0xac, 0xcc, 0x06, 0x9d, 0x50, 0x99, 0x34, 0x86, 0xaa, 0x04, 0x07, 0xd9, 0xd1, 0x0a, 0x13,
	0x49, 0x94, 0xa9, 0xfe, 0xcd, 0xc8, 0x0c, 0x07, 0x6a, 0xb0, 0x0f, 0x9f, 0x99, 0x8d, 0xf1, 0xe5,
	0x34, 0x5c, 0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x42, 0x68, 0x06, 0xf9, 0x68, 0x01, 0x00,
	0x00,
}
